{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".chart-horizontal-bars {\\n  background-color: #ddd;\\n  width: 630px;\\n}\\n\\n.chart-horizontal-bars .progress {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: nowrap;\\n  position: relative;\\n}\\n\\n.chart-horizontal-bars .progress:first-child::after {\\n  content: \\\"\\\";\\n  background-color: rgba(0, 0, 0, 0.5);\\n  position: absolute;\\n  z-index: 1;\\n  height: 100%;\\n  top: 0;\\n  width: 100%;\\n  left: 0;\\n}\\n\\n.progress-label {\\n  position: absolute;\\n  z-index: 2;\\n  left: 2px;\\n  top: 2px;\\n  line-height: 1;\\n  color: #fff;\\n  font-family: Arial, Helvetica, sans-serif;\\n  font-size: 12px;\\n}\\n\\n.progress-bar {\\n  height: 16px;\\n}\\n\\n.progress-group {\\n  border-bottom: 1px solid #fff;\\n}\"","module.exports = \"<div class=\\\"chart-horizontal-bars\\\">\\n  <div class=\\\"progress\\\">\\n    <span class=\\\"progress-label\\\">Benchmark - {{chartParams.data[0].benchmark.name}}</span>\\n    <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\"\\n        *ngFor=\\\"let value of chartParams.data[0].benchmark.values; let i = index;\\\" \\n        [ngStyle]=\\\"{'width': value * 100 / chartParams.data[0].benchmark.total + '%', \\n        'background-color': chartParams.colors[i]}\\\"></div>\\n  </div>\\n  <div class=\\\"progress-group\\\" *ngFor=\\\"let group of chartParams.data | slice: 1\\\">\\n    <div class=\\\"progress\\\" *ngFor=\\\"let answer of group.answers\\\">\\n      <span class=\\\"progress-label\\\">{{group.groupName}} - {{answer.name}}</span>\\n      <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [attr.aria-valuenow]=\\\"value\\\" [attr.aria-valuemax]=\\\"chartParams.data[0].benchmark.total\\\"\\n          *ngFor=\\\"let value of answer.values; let i = index\\\"\\n          [ngStyle]=\\\"{'width': value * 100 / chartParams.data[0].benchmark.total + '%',\\n          'background-color': chartParams.colors[i]}\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- <div class=\\\"chart-container\\\">\\n  <div class=\\\"chart-header\\\">\\n    <span class=\\\"header-name\\\">Benchmark - {{chartParams.data[0].benchmark.name}}</span>\\n    <div class=\\\"header-range\\\" \\n      *ngFor=\\\"let value of chartParams.data[0].benchmark.values; let i = index;\\\" \\n      [ngStyle]=\\\"{\\n        'width': value * 100 / chartParams.data[0].benchmark.total + '%', \\n        'background-color': chartParams.colors[i]}\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"chart-group\\\" *ngFor=\\\"let group of chartParams.data | slice: 1\\\">\\n    <div class=\\\"chart-item\\\" *ngFor=\\\"let answer of group.answers\\\">\\n      <span class=\\\"group-name\\\">\\n        {{group.groupName}} - {{answer.name}}\\n      </span>\\n      <div class=\\\"item-range\\\"\\n        *ngFor=\\\"let value of answer.values; let i = index\\\"\\n        [ngStyle]=\\\"{'width': value * 100 / chartParams.data[0].benchmark.total + '%','background-color': chartParams.colors[i]}\\\"></div>\\n    </div>\\n  </div>\\n</div> -->\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  chartParams = {\n    'colors': ['#2dadde', '#3565c8', '#0c2b75'],\n    'data': [\n      {\n        'benchmark': {\n          'name': 'hello benchmark',\n          'values': [8.5, 1.5, 2, 3],\n          'total': 15\n        }\n      },\n      {\n        'groupName': 'Group 1',\n        'answers': [\n          {\n            'name': '7803 - SB16 Sprayed Sample Nozzle',\n            'values': [5.8, 2.5, 1.0],\n          }, {\n            'name': '7801 - SB16 Fresh Scent',\n            'values': [5.75, 1.54, 2.5],\n          }\n        ]\n      },\n      {\n        'groupName': 'Group 2',\n        'answers': [\n          {\n            'name': '7802 - SB16 Sprayed Sample Nozzle',\n            'values': [5.8, 4.0, 2.1],\n          }, {\n            'name': '7800 - SB16 Fresh Scent',\n            'values': [5.25, 3.5, 0.75],\n          }\n        ]\n      }]\n  };\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}